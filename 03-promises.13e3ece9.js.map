{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACMC,EAAgB,CACpBC,MAAO,QACPC,SAAU,OACVC,SAAU,aACVC,QAAS,GACTC,QAAS,MAGLC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,oBAIpCH,EAAKC,KAAKI,SAASC,MAAMC,MAAQ,OACjCP,EAAKC,KAAKI,SAASG,KAAKD,MAAQ,OAChCP,EAAKC,KAAKI,SAASI,OAAOF,MAAQ,IAElCP,EAAKC,KAAKS,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAEC,iBACF,IAAMC,EAAab,EAAKC,KAAKI,SAASC,MAAMC,MACtCO,EAAYd,EAAKC,KAAKI,SAASG,KAAKD,MACpCQ,EAAcf,EAAKC,KAAKI,SAASI,OAAOF,MAC9C,GAqCF,SAA2BS,G,IAAEH,EAAFG,EAAEH,WAAYC,EAAdE,EAAcF,UAAWC,EAAzBC,EAAyBD,YAC9CE,GAAgB,EAEhBJ,EAAa,IACfrB,EAAA0B,OAAOC,QAAQ,8BAA+BzB,GAC9CuB,GAAgB,GAGdH,EAAY,IACdtB,EAAA0B,OAAOC,QAAQ,6BAA8BzB,GAE7CuB,GAAgB,GAGdF,EAAc,IAChBvB,EAAA0B,OAAOC,QAAQ,6BAA8BzB,GAC7CuB,GAAgB,GAGlB,OAAOA,C,CAxDHG,CAAkB,CAAEP,aAAYC,YAAWC,gBAC7C,OAEFM,QAAQC,IACN,UAA8BC,OAApBV,EAAW,WAA+BU,OAAtBT,EAAU,cAAwBS,OAAZR,IAEtDf,EAAKI,UAAUoB,UAAW,EAe5B,SAAuB3B,EAAUS,GAC/B,IAAMmB,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BT,QAAQC,IAAI,WAAgCC,OAArB1B,EAAS,cAAkB0B,OAANjB,EAAM,aAClDyB,YAAW,WACLN,EAEFI,EAAQ,CAAEhC,WAAUS,UAGpBwB,EAAU,CAAEjC,WAAUS,S,GAEvBA,E,IAxBL0B,CAAenC,SAAW,EADdgB,GAEToB,MAAK,SAAAjB,G,IAAGkB,EAAQlB,EAARnB,SAAUS,EAAKU,EAALV,MACjBd,EAAA0B,OAAOiB,QAAQ,uBAAwCZ,OAAfW,EAAS,QAAYX,OAANjB,EAAM,M,IAG9D8B,OAAM,SAAApB,G,IAAGkB,EAAQlB,EAARnB,SAAUS,EAAKU,EAALV,MAClBd,EAAA0B,OAAOmB,QAAQ,sBAAuCd,OAAfW,EAAS,QAAYX,OAANjB,EAAM,M,IAG7DgC,SAAQ,W,OAAOtC,EAAKI,UAAUoB,UAAW,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst notifyWarning = {\n  width: '500px',\n  fontSize: '25px',\n  position: 'center-top',\n  opacity: 0.7,\n  timeout: 1500,\n};\n\nconst refs = {\n  form: document.querySelector('.form'),\n  btnSubmit: document.querySelector('[type=\"submit\"]'),\n};\n\n// temporary\nrefs.form.elements.delay.value = '1000';\nrefs.form.elements.step.value = '1000';\nrefs.form.elements.amount.value = '2';\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const delayValue = refs.form.elements.delay.value;\n  const stepValue = refs.form.elements.step.value;\n  const amountValue = refs.form.elements.amount.value;\n  if (checkCorrectValue({ delayValue, stepValue, amountValue })) {\n    return;\n  }\n  console.log(\n    `delay: ${delayValue} step: ${stepValue}  amount: ${amountValue}`\n  );\n  refs.btnSubmit.disabled = true;\n\n  let delay = delayValue;\n  createPromise((position = 1), delay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      // console.error(`❌ Rejected promise ${position} in ${delay}ms`);\n    })\n    .finally(() => (refs.btnSubmit.disabled = false));\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, rejection) => {\n    console.log(`Promise ${position} at delay ${delay} created`);\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        rejection({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction checkCorrectValue({ delayValue, stepValue, amountValue }) {\n  let errorAnyValue = false;\n\n  if (delayValue < 0) {\n    Notify.warning('Delay cannot be less than 0', notifyWarning);\n    errorAnyValue = true;\n  }\n\n  if (stepValue < 0) {\n    Notify.warning('Step cannot be less than 0', notifyWarning);\n\n    errorAnyValue = true;\n  }\n\n  if (amountValue < 1) {\n    Notify.warning('Amount must be more than 0', notifyWarning);\n    errorAnyValue = true;\n  }\n\n  return errorAnyValue;\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$notifyWarning","width","fontSize","position","opacity","timeout","$ce04d3a99e08e73b$var$refs","form","document","querySelector","btnSubmit","elements","delay","value","step","amount","addEventListener","e","preventDefault","delayValue","stepValue","amountValue","param","errorAnyValue","Notify","warning","$ce04d3a99e08e73b$var$checkCorrectValue","console","log","concat","disabled","shouldResolve","Math","random","Promise","resolve","rejection","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","_$position","success","catch","failure","finally"],"version":3,"file":"03-promises.13e3ece9.js.map"}